const { Scenes, Markup } = require('telegraf');
const Order = require('../models/Order');

const orderScene = new Scenes.WizardScene(
  'order-wizard',

  // 0. –ì–æ—Ä–æ–¥
  async (ctx) => {
    ctx.wizard.state.data = {};
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:', Markup.keyboard(['–ú–æ—Å–∫–≤–∞+–æ–±–ª.', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥+–æ–±–ª.']).oneTime().resize());
    return ctx.wizard.next();
  },

  // 1. –¢–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞
  async (ctx) => {
    const city = ctx.message.text;
    if (!['–ú–æ—Å–∫–≤–∞+–æ–±–ª.', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥+–æ–±–ª.'].includes(city)) return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞.');
    ctx.wizard.state.data.city = city;
    await ctx.reply('–ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è?', Markup.keyboard(['–ë–µ—Ç–æ–Ω', '–†–∞—Å—Ç–≤–æ—Ä']).oneTime().resize());
    return ctx.wizard.next();
  },

  // 2. –ù–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å (–∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ —Å—Ä–∞–∑—É –∫ –º–∞—Ä–∫–µ/–æ–±—ä—ë–º—É)
  async (ctx) => {
    const type = ctx.message.text;
    if (!['–ë–µ—Ç–æ–Ω', '–†–∞—Å—Ç–≤–æ—Ä'].includes(type)) return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');
    ctx.wizard.state.data.productType = type;

    if (type === '–†–∞—Å—Ç–≤–æ—Ä') {
      ctx.wizard.state.data.fillerType = '–ù–µ—Ç';
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú100):');
      return ctx.wizard.selectStep(4);
    }

    const city = ctx.wizard.state.data.city;
    if (city === '–ú–æ—Å–∫–≤–∞+–æ–±–ª.') {
      await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—è:', Markup.keyboard(['–ì—Ä–∞–Ω–∏—Ç', '–ì—Ä–∞–≤–∏–π']).oneTime().resize());
      return ctx.wizard.next();
    } else {
      ctx.wizard.state.data.fillerType = '–ì—Ä–∞–Ω–∏—Ç';
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú300):');
      return ctx.wizard.selectStep(4);
    }
  },

  // 3. –§–∏–ª–ª–µ—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è –ú–æ—Å–∫–≤–∞+–æ–±–ª.)
  async (ctx) => {
    if (!ctx.wizard.state.data.fillerType) {
      const filler = ctx.message.text;
      if (!['–ì—Ä–∞–Ω–∏—Ç', '–ì—Ä–∞–≤–∏–π'].includes(filler)) return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—è.');
      ctx.wizard.state.data.fillerType = filler;
    }
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú300):');
    return ctx.wizard.next();
  },

  // 4. –ú–∞—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
  async (ctx) => {
    ctx.wizard.state.data.materialGrade = ctx.message.text;
    await ctx.reply('–£–∫–∞–∂–∏—Ç–µ –æ–±—ä—ë–º –≤ –º¬≥:', Markup.keyboard([['–ü–æ–º–æ—â—å –≤ —Ä–∞—Å—á—ë—Ç–µ']]).oneTime().resize());
    return ctx.wizard.next();
  },

  // 5. –û–±—ä—ë–º –∏–ª–∏ —Ä–∞—Å—á—ë—Ç
  async (ctx) => {
    const text = ctx.message.text;
    if (text === '–ü–æ–º–æ—â—å –≤ —Ä–∞—Å—á—ë—Ç–µ') {
      ctx.wizard.state.volumeCalc = {};
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –≤ –º–µ—Ç—Ä–∞—Ö:');
      return ctx.wizard.selectStep(16);
    }
    const volume = parseFloat(text.replace(',', '.'));
    if (isNaN(volume)) return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.');
    ctx.wizard.state.data.volume = volume;
    await ctx.reply('–ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å?', Markup.keyboard([['–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é']]).oneTime().resize());
    return ctx.wizard.next();
  },

  // 6. –°–ø–æ—Å–æ–± —É–∫–∞–∑–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞
  async (ctx) => {
    const choice = ctx.message.text;
    if (choice === '–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é') {
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:');
      return ctx.wizard.selectStep(8);
    }
    if (choice === '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é') {
      await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É üìé.');
      return ctx.wizard.selectStep(7);
    }
    return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');
  },

  // 7. –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
  async (ctx) => {
    if (!ctx.message.location) return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é.');
    const { latitude, longitude } = ctx.message.location;
    ctx.wizard.state.data.deliveryAddress = `–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: https://maps.google.com/?q=${latitude},${longitude}`;
    await ctx.reply('–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:');
    return ctx.wizard.selectStep(9);
  },

  // 8. –ê–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é
  async (ctx) => {
    ctx.wizard.state.data.deliveryAddress = ctx.message.text;
    await ctx.reply('–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:');
    return ctx.wizard.next();
  },

  // 9. –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
  async (ctx) => {
    ctx.wizard.state.data.deliveryDateTime = ctx.message.text;
    await ctx.reply('–°–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏:', Markup.keyboard(['–°–∞–º–æ—Å–ª–∏–≤', '–ê–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å']).oneTime().resize());
    return ctx.wizard.next();
  },

  // 10. –ü–æ–¥–∞—á–∞ –∏ –Ω–∞—Å–æ—Å
  async (ctx) => {
    const method = ctx.message.text;
    if (!['–°–∞–º–æ—Å–ª–∏–≤', '–ê–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å'].includes(method)) return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏.');
    ctx.wizard.state.data.deliveryMethod = method;
    if (method === '–ê–≤—Ç–æ–±–µ—Ç–æ–Ω–æ–Ω–∞—Å–æ—Å') {
      await ctx.reply('–£–∫–∞–∂–∏—Ç–µ –¥–ª–∏–Ω—É —Å—Ç—Ä–µ–ª—ã:', Markup.keyboard(['22–º', '24–º', '28–º', '32–º', '36–º', '40–º', '52–º']).oneTime().resize());
      return ctx.wizard.next();
    }
    ctx.wizard.state.data.pumpLength = '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è';
    await ctx.reply('–í—ã —Ñ–∏–∑–ª–∏—Ü–æ –∏–ª–∏ —é—Ä–ª–∏—Ü–æ?', Markup.keyboard(['–§–∏–∑–ª–∏—Ü–æ', '–Æ—Ä–ª–∏—Ü–æ']).oneTime().resize());
    return ctx.wizard.selectStep(12);
  },

  // 11. –î–ª–∏–Ω–∞ —Å—Ç—Ä–µ–ª—ã
  async (ctx) => {
    ctx.wizard.state.data.pumpLength = ctx.message.text;
    await ctx.reply('–í—ã —Ñ–∏–∑–ª–∏—Ü–æ –∏–ª–∏ —é—Ä–ª–∏—Ü–æ?', Markup.keyboard(['–§–∏–∑–ª–∏—Ü–æ', '–Æ—Ä–ª–∏—Ü–æ']).oneTime().resize());
    return ctx.wizard.next();
  },

  // 12. –¢–∏–ø –∫–ª–∏–µ–Ω—Ç–∞
  async (ctx) => {
    ctx.wizard.state.data.customerType = ctx.message.text;
    await ctx.reply('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', Markup.keyboard(['–ù–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç', '–ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç']).oneTime().resize());
    return ctx.wizard.next();
  },

  // 13. –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
  async (ctx) => {
    const payment = ctx.message.text;
    if (!['–ù–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç', '–ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç'].includes(payment)) {
      return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞.');
    }
    ctx.wizard.state.data.paymentMethod = payment;
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +7 999 123-45-67):');
    return ctx.wizard.next();
  },

  // 14. –¢–µ–ª–µ—Ñ–æ–Ω
  async (ctx) => {
    const phone = ctx.message.text.trim();
    const phoneRegex = /^((\+7|8)[\s-]?)?\(?\d{3}\)?[\s-]?\d{3}[\s-]?\d{2}[\s-]?\d{2}$/;
    if (!phoneRegex.test(phone)) {
      await ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ü—Ä–∏–º–µ—Ä: +7 999 123-45-67');
      return;
    }
    ctx.wizard.state.data.phoneNumber = phone;
    await ctx.reply('–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–Ω–µ—Ç":');
    return ctx.wizard.next();
  },

  // 15. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ (–ø–æ—Å–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è)
  async (ctx) => {
    ctx.wizard.state.data.comment = ctx.message.text;
    ctx.wizard.state.data.telegramId = ctx.from.id;
    await Order.create(ctx.wizard.state.data);

    try {
      await ctx.telegram.sendMessage(ctx.from.id, '‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ —Ä–∞–±–æ—Ç—É!');
    } catch (err) {
      console.error('‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–ª–∏–µ–Ω—Ç—É:', err);
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É (–ø—Ä–æ–≤–µ—Ä—å adminId)
    const adminId = 7811172186;
    const data = ctx.wizard.state.data;
    await ctx.telegram.sendMessage(adminId,
      `üì¨ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\nüèô *–ì–æ—Ä–æ–¥:* ${data.city}\nüß± *–¢–∏–ø:* ${data.productType} (${data.fillerType})\nüè∑ *–ú–∞—Ä–∫–∞:* ${data.materialGrade}\nüì¶ *–û–±—ä—ë–º:* ${data.volume} –º¬≥\nüìç *–ê–¥—Ä–µ—Å:* ${data.deliveryAddress}\nüïí *–î–∞—Ç–∞/–≤—Ä–µ–º—è:* ${data.deliveryDateTime}\nüöö *–ü–æ–¥–∞—á–∞:* ${data.deliveryMethod} (${data.pumpLength})\nüë§ *–ö–ª–∏–µ–Ω—Ç:* ${data.customerType}, ${data.phoneNumber}\nüßæ *–û–ø–ª–∞—Ç–∞:* ${data.paymentMethod}\nüí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${data.comment || '‚Äî'}`,
      { parse_mode: 'Markdown' }
    );

    return ctx.scene.leave();
  },

  // 16. –î–ª–∏–Ω–∞ (—Ä–∞—Å—á—ë—Ç)
  async (ctx) => {
    const length = parseFloat(ctx.message.text.replace(',', '.'));
    if (isNaN(length)) return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –≤ –º–µ—Ç—Ä–∞—Ö.');
    ctx.wizard.state.volumeCalc.length = length;
    await ctx.reply('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É:');
    return ctx.wizard.next();
  },

  // 17. –®–∏—Ä–∏–Ω–∞ (—Ä–∞—Å—á—ë—Ç)
  async (ctx) => {
    const width = parseFloat(ctx.message.text.replace(',', '.'));
    if (isNaN(width)) return ctx.reply('–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –≤ –º–µ—Ç—Ä–∞—Ö.');
    ctx.wizard.state.volumeCalc.width = width;
    await ctx.reply('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É:');
    return ctx.wizard.next();
  },

  // 18. –í—ã—Å–æ—Ç–∞ (—Ä–∞—Å—á—ë—Ç)
  async (ctx) => {
    const height = parseFloat(ctx.message.text.replace(',', '.'));
    if (isNaN(height)) return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –≤ –º–µ—Ç—Ä–∞—Ö.');
    const { length, width } = ctx.wizard.state.volumeCalc;
    const volume = +(length * width * height).toFixed(2);
    ctx.wizard.state.data.volume = volume;
    await ctx.reply(`üìê –†–∞—Å—á—ë—Ç–Ω—ã–π –æ–±—ä—ë–º: *${volume} –º¬≥*`, { parse_mode: 'Markdown' });
    await ctx.reply('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –æ–±—ä—ë–º?', Markup.keyboard([['‚úÖ –î–∞', '‚ùå –ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']]).oneTime().resize());
    return ctx.wizard.next();
  },

  // 19. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—á—ë—Ç–∞ –∏–ª–∏ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
  async (ctx) => {
    const answer = ctx.message.text;
    if (answer === '‚úÖ –î–∞') {
      await ctx.reply('üìç –ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å?', Markup.keyboard([['–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é']]).oneTime().resize());
      return ctx.wizard.selectStep(6);
    }
    if (answer === '‚ùå –ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é') {
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –æ–±—ä—ë–º –≤ –º¬≥:');
      return ctx.wizard.selectStep(5);
    }
    return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ "‚úÖ –î–∞" –∏–ª–∏ "‚ùå –ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é".');
  }
);

module.exports = orderScene;


